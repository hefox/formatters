<?php


/**
 * Implementation of hook_field_formatter_info().
 */
function textfieldlist_field_formatter_info() {
  return array(
    'textfieldlist' => array(
      'label' => t('Unordered List (by linebreaks)'),
      'field types' => array('text'),
      'multiple values' => CONTENT_HANDLE_CORE,
    ),
    'textfieldlist_ordered' => array(
      'label' => t('Ordered List (by linebreaks)'),
      'field types' => array('text'),
      'multiple values' => CONTENT_HANDLE_CORE,
    ),
  );
}


function theme_textfieldlist_formatter_textfieldlist($element) {
  $output = '';
  $txt = ($allowed =_text_allowed_values($element)) ? $allowed : $element['#item']['safe'];
  $items =  array_filter(explode("\n",trim($txt)));
  if(count($items) > 1) return theme('item_list',$items);
  else return $txt;
}
function theme_textfieldlist_formatter_textfieldlist_ordered($element) {
  $output = '';
  $txt = ($allowed =_text_allowed_values($element)) ? $allowed : $element['#item']['safe'];
  $items = array_filter(explode("\n",trim($txt)));
  if(count($items) > 1) return theme('item_list',$items, NULL, 'ol');
  else return $txt;
  return $output;
}
/**
 * Implementation of hook_theme().
 */
function textfieldlist_theme() {
  return array(
    'textfieldlist_formatter_textfieldlist' => array(
      'arguments' => array('element'),
    ),
    'textfieldlist_formatter_textfieldlist_ordered' => array(
      'arguments' => array('element'),
    ),
  );
}
